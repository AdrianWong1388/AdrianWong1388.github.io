[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homepage",
    "section": "",
    "text": "My name is Adrian Ian Wong Sye En. I am 23 years old and originally from Malaysia. I have been living in Singapore for over five years, where I pursued my Diploma in Aeronautical Engineering at Singapore Polytechnic and now studying for a Bachelor’s Degree in Applied Artificial Intelligence at the Singapore Institute of Technology.\n\n\nHere is a video introducing my polytechnic:\n\nknitr::include_url(\"https://www.youtube.com/watch?v=ddlp6JXcSF0\")\n\n\n\nHere is a video introducing my university:\n\nknitr::include_url(\"https://www.youtube.com/watch?v=H69fqdge9e4\")\n\n\n\nExciting news! My university is soon opening its new campus in the Punggol Digital District:\n\nknitr::include_url(\"https://www.youtube.com/watch?v=AQMWEYkattE&t=273s\")"
  },
  {
    "objectID": "hobby.html",
    "href": "hobby.html",
    "title": "Hobby",
    "section": "",
    "text": "My hobby is studying mathematics.\nAt the moment, I am self-studying calculus and linear algebra, and I plan to study real analysis and complex analysis afterward.\nBelow are some notes I have made in both English and Chinese during my study of calculus:\n\nChapter 1 Functions and Models 函數與模型\n\n\n1.1 Four Ways to Represent a Function 四種表示函數的方法\nDefinition of Function 函數的定義\nA function \\(f\\) is a rule that assign to each element \\(x\\) in a set \\(D\\) exactly one element, \\(f(x)\\) in set \\(R.\\)\n函數 f 是一個為集合 D 中的每個元素 x 分配一個元素，即集合 R 中的 f(x) 的規則。\nx: independent variable\nf(x): dependent variable\nset D: Domain\nset R: Range\n\nRepresentation of Functions 表示函數的方法\n\nverbally 语言描述\nnumerically 数值表示\nvisually 图形表示\nalgebraically 代数表示\n\n\nRule to Define Function 定義函數的規則\nVertical Line Test 垂線測試\nA curve in the xy-plane is the graph of a function of x if and only if no vertical line intersects the curve more than once.\nxy 平面中的曲線是 x 函數的圖形，當且僅當沒有垂直線與曲線多次相交時。\n\n\n\nVertical Line Test\n\n\n\nPiecewise Defined Function 分段定義函數\nA function defined by different formulas in different parts of their domains.\n在域的不同部分用不同公式定義的函數。\n\\[\nf(x) = \\begin{cases}\n    1-x, & \\text{if } x \\leq 0 \\\\\n    x^2, & \\text{if } x &gt; 0\n\\end{cases}\n\\]\nAbsolute Value 絕對值\n\\[\n|a| = \\begin{cases}\n     a, & \\text{if } x \\geq 0 \\\\\n    -a, & \\text{if } x &lt; 0\n\\end{cases}\n\\]\n\nEven Function 偶數函數\nA function \\(f\\) satisfies \\(f(-x)=f(x)\\) for every element \\(x\\) at its domain.\n域中每個元素 \\(x\\) 都滿足 \\(f(-x)=f(x)\\) 的函數。\nIts graph is symmetry respect to y-axis.\n其圖形是相對於y軸對稱的。\n\n\n\nEven Fucntion\n\n\nOdd Function 奇數函數\nA function \\(f\\) satisfies \\(f(-x)=-f(x)\\) for every element \\(x\\) at its domain.\n域中每個元素 \\(x\\) 都滿足 \\(f(-x)=-f(x)\\) 的函數。\nIts graph is symmetry about the origin.\n其圖形是相對於原點對稱的。\n\n\n\nOdd function\n\n\n\nIncreasing Function 遞增函數\nA function \\(f\\) is increasing on an interval \\(I\\) if \\(f(x_1)&lt;f(x_2), x_1&lt;x_2\\) in \\(I\\).\n如果在 \\(I\\) 中 \\(x_1&lt;x_2\\)，且\\(f(x_1)&lt;f(x_2)\\)，則函數f 在區間 \\(I\\) 上遞增。\n\n\n\nIncreasing Fucntion\n\n\nDecreasing Function 遞減函數\nA function \\(f\\) is decreasing on an interval \\(I\\) if \\(f(x_1)&gt;f(x_2), x_1&lt;x_2\\) in \\(I\\).\n如果在 \\(I\\) 中 \\(x_1&lt;x_2\\)，且\\(f(x_1)&gt;f(x_2)\\)，則函數f 在區間 \\(I\\) 上遞減。\n\n\n\nDecreasing Function"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project",
    "section": "",
    "text": "Last trimester, I completed a project on Object-Oriented Programming that involved creating a game.\nHere are some images from the project:\n\n\n\nGame Menu\n\n\n\n\n\nGame Scene 1\n\n\n\n\n\nGame Scene 2\n\n\nHere are some codes from the project:\npackage com.mygdx.entity;\n\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.math.MathUtils;\nimport com.badlogic.gdx.math.Rectangle;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.glutils.ShapeRenderer;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\n\n\npublic abstract class Entity \n{\n    // Attributes\n    private int entityid;\n    private float posx;\n    private float posy;\n    private float speed;\n    private Texture texture;\n    private float width;\n    private float height;\n    private Vector2 direction;\n    private Rectangle boundingBox;\n    private SpriteBatch batch;\n    private ShapeRenderer shape;\n\n    // Constructor\n    public Entity(int entityid, float posx, float posy, float speed, String texturePath, float width, float height) \n    {\n        this.entityid = entityid;\n        this.posx = posx;\n        this.posy = posy;\n        this.speed = speed;\n        this.texture = new Texture (Gdx.files.internal(texturePath));\n        this.width = width;\n        this.height = height;\n        float randomAngle = MathUtils.random(0f, MathUtils.PI2);\n        this.direction = new Vector2(MathUtils.cos(randomAngle), MathUtils.sin(randomAngle));\n        this.boundingBox = new Rectangle(this.getPosx(), this.getPosy(), this.getWidth(), this.getHeight());\n        this.batch = new SpriteBatch();\n        this.shape = new ShapeRenderer();\n    }\n\n    // Method: Set Entity ID\n    public void setEntityid(int entityid)\n    {\n        this.entityid = entityid;\n    }\n    \n    // Method: Get Entity ID\n    public int getEntityid()\n    {\n        return entityid;\n    }\n    \n    // Method: Set Entity X Position \n    public void setPosx(float posx) \n    {\n        this.posx = posx;\n    }\n    \n    // Method: Get Entity X Position \n    public float getPosx() \n    {\n        return this.posx;\n    }\n    \n    // Method: Set Entity Y Position \n    public void setPosy(float posy) \n    {\n        this.posy = posy;\n    }\n    \n    // Method: Get Entity Y Position \n    public float getPosy() \n    {\n        return this.posy;\n    }\n    \n    // Method: Set Entity Speed \n    public void setSpeed(float speed) \n    {\n        this.speed = speed;\n    }\n        \n    // Method: Get Entity Speed \n    public float getSpeed() \n    {\n        return this.speed;\n    }\n    \n    // Method: Set Entity Texture\n    public void setTexture(Texture texture) \n    {\n        this.texture = texture;\n    }\n    \n    // Method: Get Entity Texture\n    public Texture getTexture() \n    {\n        return this.texture;\n    }\n    \n    // Method: Set Entity Texture Width\n    public void setWidth(float width)\n    {\n        this.width = width;\n    }\n        \n    // Method: Get Entity Texture Width\n    public float getWidth()\n    {           \n        return this.width;      \n    }\n        \n    // Method: Set Entity Texture Height\n    public void setHeight(float height)\n    {\n        this.height = height;\n    }\n    \n    // Method: Get Entity Texture Height\n    public float getHeight()\n    {\n        return this.height;\n    }\n    \n    // Method: Set Entity Direction\n    public void setDirecction(Vector2 direction)\n    {\n       this.direction = direction;\n    }\n    \n    // Method: Get Entity Direction\n    public Vector2 getDirection()\n    {\n        return this.direction;\n    }\n    \n    // Method: Set Entity Bounding Box\n    public void setBoundingBox(float posx, float posy)\n    {\n        this.boundingBox = new Rectangle(this.posx, this.posy, this.width, this.height);\n    }\n    \n    // Method: Get Entity Bounding Box\n    public Rectangle getBoundingBox()\n    {\n        return this.boundingBox;\n    }\n    \n    // Method: Draw Entity\n    public void draw() \n    {\n        batch.begin();\n            batch.draw(getTexture(), getPosx(), getPosy(), getWidth(), getHeight());\n        batch.end();\n        Gdx.gl.glEnable(GL20.GL_BLEND);\n        Gdx.gl.glBlendFunc(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n        shape.begin(ShapeRenderer.ShapeType.Line);\n            shape.setColor(new Color(256, 0, 0, 0));\n            shape.rect(boundingBox.x, boundingBox.y, boundingBox.width, boundingBox.height);\n            if (boundingBox != null) {\n                boundingBox.setPosition(this.posx, this.posy);\n            } \n        shape.end();\n        Gdx.gl.glDisable(GL20.GL_BLEND);\n    }\n    \n    // Method: Dispose Entity\n    public void dispose() \n    {\n        if (this.texture != null) {\n            this.texture.dispose();\n        }\n        if (this.shape != null) {\n            this.shape.dispose();\n        }\n        if (this.batch != null) {\n            this.batch.dispose();\n        }\n        if (this.boundingBox != null) {\n            this.boundingBox = null;\n        }\n    }\n}"
  }
]